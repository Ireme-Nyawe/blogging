{"version":3,"file":"authentication.js","names":["_usersModel","_interopRequireDefault","require","_jsonwebtoken","Authorization","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","next","token","decoded","logedUser","wrap","_callee$","_context","prev","headers","authorization","startsWith","split","status","json","message","Jwt","verify","process","env","JWT_SECRET","sent","userTable","findById","id","role","t0","error","stop","_x","_x2","_x3","apply","arguments","_default","exports"],"sources":["../../../src/middleware/authentication.js"],"sourcesContent":["import userTable from \"../models/usersModel\";\r\n// import Jwt from \"jsonwebtoken\";\r\n// const authorization = async(req, res, next) =>{\r\n//     let token;\r\n//     try{\r\n//         if(\r\n//             req.headers.authorization &&\r\n//             req.headers.authorization.startsWith(\"Bearer \")\r\n//             ){\r\n//                 token = req.headers.authorization.split(\" \")[1];\r\n//             }\r\n//         if(!token){\r\n//             res.status(\"404\").json({\r\n//                 status : \"You are not logged, Login First\",\r\n//             });\r\n//         }\r\n\r\n//         const decoded = await Jwt.verify(token, process.env.JWT_SECRET);\r\n//         const loggedUser = await userTable.findById(decoded._id);\r\n\r\n//         if(!loggedUser){\r\n//             res.status(403).json({\r\n//                 status : \"403\",\r\n//                 message : \"Token has Expired , login again\",\r\n//             });\r\n//         }\r\n\r\n//         if(!loggedUser.role !== \"user\"){\r\n//             res.status(404).json({\r\n//                 status : \"404\",\r\n//                 message : \"Only Logged User Can Do this operation\",\r\n//             });\r\n//         }\r\n//         else{\r\n//             req.userTable = loggedUser;\r\n//             next();\r\n//         }\r\n//     }\r\n//     catch(error){\r\n//         res.status(500).json({\r\n//             status : \"500\",\r\n//             error : error.message\r\n//         })\r\n//     }\r\n// };\r\n\r\n// export default authorization;\r\n\r\nimport Jwt from \"jsonwebtoken\";\r\nconst Authorization = async (req, res, next) => {\r\n  let token;\r\n\r\n  try {\r\n    if (\r\n      req.headers.authorization &&\r\n      req.headers.authorization.startsWith(\"Bearer \")\r\n    ) {\r\n      token = req.headers.authorization.split(\" \")[1];\r\n    }\r\n\r\n    if (!token) {\r\n      res.status(404).json({\r\n        status: \"404\",\r\n        message: \"You Are Not Logged In Please login\",\r\n      });\r\n    }\r\n\r\n    const decoded = await Jwt.verify(token, process.env.JWT_SECRET);\r\n    const logedUser = await userTable.findById(decoded.id);\r\n\r\n    if (!logedUser) {\r\n      res.status(403).json({\r\n        status: \"403\",\r\n        message: \"Token has Expired Please login Again\",\r\n      });\r\n    }\r\n\r\n    if (logedUser.role !== \"user\") {\r\n      res.status(404).json({\r\n        status: \"404\",\r\n        message: \"Only Loged User can do this operation\",\r\n      });\r\n    } else {\r\n      req.userTable = logedUser;\r\n      next();\r\n    }\r\n\r\n  } catch (error) {\r\n    res.status(500).json({\r\n      status: \"500\",\r\n      error: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport default Authorization;"],"mappings":";;;;;;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAgDA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AA/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,IAAME,aAAa;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI;IAAA,IAAAC,KAAA,EAAAC,OAAA,EAAAC,SAAA;IAAA,OAAAR,YAAA,YAAAS,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAN,IAAA;QAAA;UAAAM,QAAA,CAAAC,IAAA;UAIvC,IACET,GAAG,CAACU,OAAO,CAACC,aAAa,IACzBX,GAAG,CAACU,OAAO,CAACC,aAAa,CAACC,UAAU,CAAC,SAAS,CAAC,EAC/C;YACAT,KAAK,GAAGH,GAAG,CAACU,OAAO,CAACC,aAAa,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACjD;UAEA,IAAI,CAACV,KAAK,EAAE;YACVF,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cACnBD,MAAM,EAAE,KAAK;cACbE,OAAO,EAAE;YACX,CAAC,CAAC;UACJ;UAACR,QAAA,CAAAN,IAAA;UAAA,OAEqBe,wBAAG,CAACC,MAAM,CAACf,KAAK,EAAEgB,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;QAAA;UAAzDjB,OAAO,GAAAI,QAAA,CAAAc,IAAA;UAAAd,QAAA,CAAAN,IAAA;UAAA,OACWqB,sBAAS,CAACC,QAAQ,CAACpB,OAAO,CAACqB,EAAE,CAAC;QAAA;UAAhDpB,SAAS,GAAAG,QAAA,CAAAc,IAAA;UAEf,IAAI,CAACjB,SAAS,EAAE;YACdJ,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cACnBD,MAAM,EAAE,KAAK;cACbE,OAAO,EAAE;YACX,CAAC,CAAC;UACJ;UAEA,IAAIX,SAAS,CAACqB,IAAI,KAAK,MAAM,EAAE;YAC7BzB,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cACnBD,MAAM,EAAE,KAAK;cACbE,OAAO,EAAE;YACX,CAAC,CAAC;UACJ,CAAC,MAAM;YACLhB,GAAG,CAACuB,SAAS,GAAGlB,SAAS;YACzBH,IAAI,CAAC,CAAC;UACR;UAACM,QAAA,CAAAN,IAAA;UAAA;QAAA;UAAAM,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAmB,EAAA,GAAAnB,QAAA;UAGDP,GAAG,CAACa,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YACnBD,MAAM,EAAE,KAAK;YACbc,KAAK,EAAEpB,QAAA,CAAAmB,EAAA,CAAMX;UACf,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAR,QAAA,CAAAqB,IAAA;MAAA;IAAA,GAAA9B,OAAA;EAAA,CAEN;EAAA,gBA5CKL,aAAaA,CAAAoC,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAArC,IAAA,CAAAsC,KAAA,OAAAC,SAAA;EAAA;AAAA,GA4ClB;AAAC,IAAAC,QAAA,GAAAC,OAAA,cAEa1C,aAAa"}