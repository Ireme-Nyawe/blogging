{"version":3,"file":"blogController.js","names":["_blogModel","_interopRequireDefault","require","_cloud","createBlog","exports","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","_result","_result2","_req$body","blogImage","title","header","contents","result","blog","wrap","_callee$","_context","prev","next","body","file","uploadToCloud","sent","blogTable","create","secure_url","author","userTable","lname","abrupt","status","json","message","data","t0","error","stop","_x","_x2","apply","arguments","viewAllBlogs","_ref2","_callee2","viewblogs","_callee2$","_context2","find","statusbar","_x3","_x4","viewOneBlog","_ref3","_callee3","id","viewblog","_callee3$","_context3","params","findById","_x5","_x6","updateBlog","_ref4","_callee4","_result3","_result4","checkId","_req$body2","_callee4$","_context4","findByIdAndUpdate","_x7","_x8","deleteBlog","_ref5","_callee5","delBlog","_callee5$","_context5","findByIdAndDelete","_x9","_x10"],"sources":["../../../src/controller/blogController.js"],"sourcesContent":["import blogTable from \"../models/blogModel\";\r\nimport { uploadToCloud } from \"../helper/cloud\";\r\n// https://res.cloudinary.com/ddlzcnyhe/image/upload/v1696595213/cld-sample.jpg\r\n\r\nexport const createBlog = async(req,res) =>{\r\n    try {\r\n        const {blogImage,title,header,contents} = req.body;\r\n        let result;\r\n        if(req.file){\r\n            result = await uploadToCloud(req.file,res);\r\n        }\r\n        const blog = blogTable.create({\r\n                blogImage : result?.secure_url || \"https://res.cloudinary.com/ddlzcnyhe/image/upload/v1696595213/cld-sample.jpg\",\r\n                title,\r\n                header,\r\n                contents,\r\n                author: req.userTable.lname\r\n\r\n            })\r\n\r\n            return res.status(200).json({\r\n                message : \"Blog Created SuccessFully.\",\r\n                data: \r\n                {\r\n                    blogImage : result?.secure_url,\r\n                title,\r\n                header,\r\n                contents,\r\n                author: req.userTable.lname\r\n                }\r\n            })\r\n    } catch (error) {\r\n        return res.status(500).json({\r\n            message : \"Failed To Create A Blog!\",\r\n            error : error.message,\r\n        })\r\n    }\r\n};\r\n\r\n// view all blogs\r\nexport const viewAllBlogs = async (req,res) =>{\r\n    try {\r\n      const viewblogs = await blogTable.find();\r\n      return res.status(200).json({\r\n        status : \"200\",\r\n        message : \"All Blogs Retrieved, Check Below:\",\r\n        data : viewblogs,\r\n      })\r\n    } catch (error) {\r\n      return res.status(500).json({\r\n        statusbar: \"500\",\r\n        message: \"Failed To Retrieve Users Information\",\r\n        error: error.message,\r\n  \r\n      });\r\n      \r\n    }\r\n  };\r\n\r\n//   View One Blog\r\n  export const viewOneBlog = async (req,res) =>{\r\n    try {\r\n        const {id}= req.params;\r\n      const viewblog = await blogTable.findById(id)\r\n      return res.status(200).json({\r\n        status : \"200\",\r\n        message : \"A Blog Retrieved, Check Below:\",\r\n        data : viewblog,\r\n      })\r\n    } catch (error) {\r\n      return res.status(500).json({\r\n        statusbar: \"500\",\r\n        message: \"Failed To Retrieve Blog Information\",\r\n        error: error.message,\r\n  \r\n      });\r\n      \r\n    }\r\n  };\r\n\r\n//   update blog\r\nexport const updateBlog = async(req,res) =>{\r\n    try {\r\n        const {id}=req.params;\r\n        const checkId=await blogTable.findById(id);\r\n        if(!checkId){\r\n            return res.status(404).json({\r\n                message : \"Id Do Not Correspond To Any Blog!\",\r\n            })\r\n        };\r\n\r\n        const {blogImage,title,header,contents} = req.body;\r\n        let result;\r\n        if(req.file){\r\n            result = await uploadToCloud(req.file,res);\r\n        }\r\n        const blog = blogTable.findByIdAndUpdate(id,{\r\n                blogImage : result?.secure_url || \"https://res.cloudinary.com/ddlzcnyhe/image/upload/v1696595213/cld-sample.jpg\",\r\n                title,\r\n                header,\r\n                contents,\r\n                author: req.userTable.lname\r\n\r\n            })\r\n\r\n            return res.status(200).json({\r\n                message : \"Blog Updated SuccessFully, Check Below:\",\r\n                data: \r\n                {\r\n                blogImage : result?.secure_url,\r\n                title,\r\n                header,\r\n                contents,\r\n                author: req.userTable.lname\r\n                }\r\n            })\r\n    } catch (error) {\r\n        return res.status(500).json({\r\n            message : \"Failed To Update A Blog!\",\r\n            error : error.message,\r\n        })\r\n    }\r\n};\r\n\r\n// delete A blog\r\nexport const deleteBlog = async (req, res) => {\r\n    try {\r\n      const { id } = req.params;\r\n      const checkId = await blogTable.findById(id);\r\n      if (!checkId)\r\n        return res.status(404).json({\r\n          message: \"Id not Found\",\r\n        });\r\n  \r\n      const delBlog = await blogTable.findByIdAndDelete(id);\r\n      return res.status(201).json({\r\n        statusbar: \"Succcess\",\r\n        message: \"Blog  Deleteded Sucessfully, See Deleted Blog Below: \",\r\n        data: delBlog,\r\n      });\r\n    } catch (error) {\r\n      return res.status(500).json({\r\n        message: \"Failed To Delete Blog!\",\r\n        error: error.message,\r\n      });\r\n    }\r\n  };\r\n"],"mappings":"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"}